// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cmo, use-js-string=true, version=5.4.0

//# unitInfo: Provides: Dune__exe__View
//# unitInfo: Requires: CamlinternalLazy, Definicije__Avtomat, Definicije__Stanje, Definicije__Trak, Definicije__ZagnaniAvtomat, Dune__exe__Model, Dune__exe__Vektor, Stdlib, Stdlib__List, Stdlib__String, Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_fill$4 = "fill",
    cst_g$3 = "g",
    cst_h2$1 = "h2",
    cst_none$1 = "none",
    cst_stroke$5 = "stroke",
    cst_stroke_width$1 = "stroke-width",
    cst_white$1 = "white",
    caml_equal = runtime.caml_equal,
    caml_obj_tag = runtime.caml_obj_tag;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "#",
    barva_sprejemnega_stanja = "rgb(56, 142, 60)",
    barva_trenutnega_stanja = "rgb(255, 242, 202)",
    barva_zacetnega_stanja = "rgb(8, 118, 155)",
    privzeta_barva_crt = "black",
    privzeta_barva_polnila = cst_white$1,
    Vdom = global_data.Vdom,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Stdlib_String = global_data.Stdlib__String,
    Dune_exe_Model = global_data.Dune__exe__Model,
    Definicije_ZagnaniAvtomat = global_data.Definicije__ZagnaniAvtomat,
    Definicije_Avtomat = global_data.Definicije__Avtomat,
    Stdlib_List = global_data.Stdlib__List,
    Stdlib = global_data.Stdlib,
    Definicije_Trak = global_data.Definicije__Trak,
    Dune_exe_Vektor = global_data.Dune__exe__Vektor,
    Definicije_Stanje = global_data.Definicije__Stanje,
    Parametri =
      [0,
       barva_sprejemnega_stanja,
       barva_trenutnega_stanja,
       barva_zacetnega_stanja,
       3.,
       10.,
       20.,
       0.4,
       10.,
       5.,
       20.,
       25.,
       privzeta_barva_crt,
       privzeta_barva_polnila],
    cst_header = "header",
    cst_article = "article",
    cst_stroke_width$0 = cst_stroke_width$1,
    cst_height = "height",
    cst_width = "width",
    cst_svg = "svg",
    cst_preberi_naslednji_znak = "preberi naslednji znak",
    cst_href = "href",
    cst_button = "button",
    cst_role = "role",
    cst_a = "a",
    cst_h2 = cst_h2$1,
    cst_mark = "mark",
    cst_h2$0 = cst_h2$1,
    _b_ = [0, 0.3],
    cst_white$0 = cst_white$1,
    cst_fill$3 = cst_fill$4,
    cst_stroke$4 = cst_stroke$5,
    cst_stroke_width = cst_stroke_width$1,
    cst_g$2 = cst_g$3,
    cst_white = cst_white$1,
    cst_fill$1 = cst_fill$4,
    cst_none$0 = cst_none$1,
    cst_fill$2 = cst_fill$4,
    cst_stroke$2 = cst_stroke$5,
    cst_stroke$3 = cst_stroke$5,
    cst_g$1 = cst_g$3,
    cst_fill = cst_fill$4,
    cst_stroke = cst_stroke$5,
    cst_stroke$0 = cst_stroke$5,
    cst_none = cst_none$1,
    cst_fill$0 = cst_fill$4,
    cst_stroke$1 = cst_stroke$5,
    _a_ = [0, 0],
    cst_g$0 = cst_g$3,
    cst_central = "central",
    cst_dominant_baseline = "dominant-baseline",
    cst_middle = "middle",
    cst_text_anchor = "text-anchor",
    cst_y = "y",
    cst_x = "x",
    cst_text = "text",
    cst_g = cst_g$3,
    cst_y2 = "y2",
    cst_x2 = "x2",
    cst_y1 = "y1",
    cst_x1 = "x1",
    cst_line = "line",
    cst_r = "r",
    cst_cy = "cy",
    cst_cx = "cx",
    cst_circle = "circle";
   function int_of_float_attr(tag, value){
    return caml_call2(Vdom[37], tag, value | 0);
   }
   function svg_krog(opt, sredisce, polmer){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     _aT_ = [0, int_of_float_attr(cst_r, polmer), 0],
     _aU_ = [0, int_of_float_attr(cst_cy, sredisce[2]), _aT_],
     _aV_ = [0, int_of_float_attr(cst_cx, sredisce[1]), _aU_],
     _aW_ = [0, caml_call2(Stdlib[37], _aV_, a)];
    return caml_call4(Vdom[52], cst_circle, 0, _aW_, 0);
   }
   function svg_daljica(opt, zacetek, konec){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     _aO_ = [0, int_of_float_attr(cst_y2, konec[2]), 0],
     _aP_ = [0, int_of_float_attr(cst_x2, konec[1]), _aO_],
     _aQ_ = [0, int_of_float_attr(cst_y1, zacetek[2]), _aP_],
     _aR_ = [0, int_of_float_attr(cst_x1, zacetek[1]), _aQ_],
     _aS_ = [0, caml_call2(Stdlib[37], _aR_, a)];
    return caml_call4(Vdom[52], cst_line, 0, _aS_, 0);
   }
   function svg_puscica(opt, zacetek, konec){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     vektor = caml_call2(Dune_exe_Vektor[3], konec, zacetek),
     normala = [254, - vektor[2], vektor[1]],
     _aE_ = caml_call2(Dune_exe_Vektor[1], -1., vektor),
     vektor_leve_konice =
       caml_call3(Dune_exe_Vektor[6], [0, Parametri[7]], _aE_, normala),
     _aF_ = caml_call2(Dune_exe_Vektor[1], -1., normala),
     _aG_ = caml_call2(Dune_exe_Vektor[1], -1., vektor),
     vektor_desne_konice =
       caml_call3(Dune_exe_Vektor[6], [0, Parametri[7]], _aG_, _aF_),
     _aH_ = caml_call1(Dune_exe_Vektor[5], vektor_leve_konice),
     _aI_ = caml_call2(Dune_exe_Vektor[1], Parametri[5], _aH_),
     leva_konica = caml_call2(Dune_exe_Vektor[2], konec, _aI_),
     _aJ_ = caml_call1(Dune_exe_Vektor[5], vektor_desne_konice),
     _aK_ = caml_call2(Dune_exe_Vektor[1], Parametri[5], _aJ_),
     desna_konica = caml_call2(Dune_exe_Vektor[2], konec, _aK_),
     _aL_ = [0, svg_daljica([0, a], konec, desna_konica), 0],
     _aM_ = [0, svg_daljica([0, a], konec, leva_konica), _aL_],
     _aN_ = [0, svg_daljica([0, a], zacetek, konec), _aM_];
    return caml_call4(Vdom[52], cst_g, 0, 0, _aN_);
   }
   function svg_oznaka(opt, polozaj, besedilo){
    if(opt) var sth = opt[1], a = sth; else var a = 0;
    var
     _ay_ = [0, caml_call2(Vdom[53], 0, besedilo), 0],
     _az_ = [0, caml_call2(Vdom[36], cst_dominant_baseline, cst_central), 0],
     _aA_ = [0, caml_call2(Vdom[36], cst_text_anchor, cst_middle), _az_],
     _aB_ = [0, int_of_float_attr(cst_y, polozaj[2]), _aA_],
     _aC_ = [0, int_of_float_attr(cst_x, polozaj[1]), _aB_],
     _aD_ = [0, caml_call2(Stdlib[37], _aC_, a)];
    return caml_call4(Vdom[52], cst_text, 0, _aD_, _ay_);
   }
   function prikaz_stanja(model, q){
    var
     avtomat = caml_call1(Definicije_ZagnaniAvtomat[2], model[1]),
     polozaj = caml_call2(Dune_exe_Model[2], model, q),
     barva_robu =
       caml_equal(q, caml_call1(Definicije_Avtomat[6], avtomat))
        ? Parametri[3]
        : caml_call2
           (Definicije_Avtomat[9], avtomat, q)
          ? Parametri[1]
          : Parametri[12],
     barva_polnila =
       caml_equal(q, caml_call1(Definicije_ZagnaniAvtomat[4], model[1]))
        ? Parametri[2]
        : Parametri[13],
     _an_ =
       [0, svg_oznaka(0, polozaj, caml_call1(Definicije_Stanje[2], q)), 0],
     _ao_ = Parametri[10],
     _ap_ = [0, caml_call2(Vdom[36], cst_fill, barva_polnila), 0],
     svg_elementi =
       [0,
        svg_krog
         ([0, [0, caml_call2(Vdom[36], cst_stroke, barva_robu), _ap_]],
          polozaj,
          _ao_),
        _an_];
    if(caml_equal(q, caml_call1(Definicije_Avtomat[6], avtomat)))
     var
      _aq_ = caml_call2(Dune_exe_Vektor[3], polozaj, [254, Parametri[10], 0.]),
      _ar_ =
        caml_call2
         (Dune_exe_Vektor[3],
          polozaj,
          [254, Parametri[10] + Parametri[6], 0.]),
      svg_elementi$0 =
        [0,
         svg_puscica
          ([0, [0, caml_call2(Vdom[36], cst_stroke$0, Parametri[3]), 0]],
           _ar_,
           _aq_),
         svg_elementi];
    else
     var svg_elementi$0 = svg_elementi;
    if(caml_call2(Definicije_Avtomat[9], avtomat, q))
     var
      _as_ = Parametri[10] - Parametri[9],
      _at_ = [0, caml_call2(Vdom[36], cst_fill$0, cst_none), 0],
      _au_ =
        [0,
         svg_krog
          ([0, [0, caml_call2(Vdom[36], cst_stroke$1, Parametri[1]), _at_]],
           polozaj,
           _as_),
         0],
      svg_elementi$1 = caml_call2(Stdlib[37], svg_elementi$0, _au_);
    else
     var svg_elementi$1 = svg_elementi$0;
    var _av_ = 0;
    function _aw_(param){return [0, q];}
    var _ax_ = [0, [0, caml_call3(Vdom[8], _a_, 0, _aw_), _av_]];
    return caml_call4(Vdom[52], cst_g$0, 0, _ax_, svg_elementi$1);
   }
   function prikaz_zanke(zacetek, oznaka){
    var
     polozaj_oznake =
       caml_call2(Dune_exe_Vektor[3], zacetek, [254, 0., 2. * Parametri[11]]),
     _ad_ = [0, svg_oznaka(0, polozaj_oznake, oznaka), 0],
     _ae_ = Parametri[8],
     _af_ =
       [0,
        svg_krog
         ([0, [0, caml_call2(Vdom[36], cst_fill$1, cst_white), 0]],
          polozaj_oznake,
          _ae_),
        _ad_],
     _ag_ = Parametri[11],
     _ah_ = caml_call2(Dune_exe_Vektor[3], zacetek, [254, 0., Parametri[11]]),
     _ai_ = [0, caml_call2(Vdom[36], cst_fill$2, cst_none$0), 0],
     _aj_ =
       [0,
        svg_krog
         ([0, [0, caml_call2(Vdom[36], cst_stroke$2, Parametri[12]), _ai_]],
          _ah_,
          _ag_),
        _af_],
     _ak_ = caml_call2(Dune_exe_Vektor[2], zacetek, [254, Parametri[10], -2.]),
     _al_ =
       caml_call2(Dune_exe_Vektor[2], zacetek, [254, Parametri[10] + 2., -3.]),
     _am_ =
       [0,
        svg_puscica
         ([0, [0, caml_call2(Vdom[36], cst_stroke$3, Parametri[12]), 0]],
          _al_,
          _ak_),
        _aj_];
    return caml_call4(Vdom[52], cst_g$1, 0, 0, _am_);
   }
   function prikaz_prehoda(zacetek, konec, oznaka){
    var
     _Z_ = caml_call2(Dune_exe_Vektor[7], zacetek, konec),
     lambda = Parametri[10] / _Z_,
     zacetek_puscice =
       caml_call3(Dune_exe_Vektor[6], [0, lambda], zacetek, konec),
     konec_puscice =
       caml_call3(Dune_exe_Vektor[6], [0, 1. - lambda], zacetek, konec),
     polozaj_oznake = caml_call3(Dune_exe_Vektor[6], _b_, zacetek, konec),
     ___ = [0, svg_oznaka(0, polozaj_oznake, oznaka), 0],
     _$_ = Parametri[8],
     _aa_ =
       [0,
        svg_krog
         ([0, [0, caml_call2(Vdom[36], cst_fill$3, cst_white$0), 0]],
          polozaj_oznake,
          _$_),
        ___],
     _ab_ = [0, caml_call2(Vdom[36], cst_stroke$4, Parametri[12]), 0],
     _ac_ =
       [0,
        svg_puscica
         ([0, [0, int_of_float_attr(cst_stroke_width, Parametri[4]), _ab_]],
          zacetek_puscice,
          konec_puscice),
        _aa_];
    return caml_call4(Vdom[52], cst_g$2, 0, 0, _ac_);
   }
   function prikaz_traku(model){
    var
     trak = caml_call1(Definicije_ZagnaniAvtomat[3], model[1]),
     _L_ = model[3];
    if(typeof _L_ === "number" && _L_){
     var
      _O_ = caml_call1(Definicije_Trak[6], trak),
      _M_ = 0,
      _N_ = 0,
      _P_ = [0, caml_call1(Vdom[42], _O_), 0],
      _Q_ = function(niz){return [2, niz];},
      _R_ = [0, [0, caml_call3(Vdom[19], 0, 0, _Q_), _P_]],
      _S_ = [0, caml_call3(Vdom[60], 0, _R_, _N_), _M_];
     return caml_call5(Vdom[51], 0, cst_h2, 0, 0, _S_);
    }
    var
     prebrani = caml_call1(Definicije_Trak[7], trak),
     neprebrani = caml_call1(Definicije_Trak[8], trak),
     _T_ = [0, caml_call2(Vdom[53], 0, neprebrani), 0],
     _U_ = [0, caml_call5(Vdom[51], 0, cst_mark, 0, 0, _T_), 0],
     _V_ = [0, caml_call2(Vdom[53], 0, prebrani), _U_],
     _W_ = 0;
    function _X_(param){return 2;}
    var _Y_ = [0, [0, caml_call3(Vdom[13], 0, 0, _X_), _W_]];
    return caml_call5(Vdom[51], 0, cst_h2$0, 0, _Y_, _V_);
   }
   function prikaz_gumba_za_naslednji_znak(model){
    var
     _B_ = [0, caml_call2(Vdom[53], 0, cst_preberi_naslednji_znak), 0],
     _D_ = 1 === model[3] ? 1 : 0,
     _C_ = 0;
    if(_D_)
     var _E_ = _D_;
    else
     var
      _K_ = caml_call1(Definicije_ZagnaniAvtomat[3], model[1]),
      _E_ = caml_call1(Definicije_Trak[3], _K_);
    var _F_ = [0, caml_call1(Vdom[43], _E_), _C_];
    function _G_(param){return 0;}
    var
     _H_ = [0, caml_call3(Vdom[11], 0, 0, _G_), _F_],
     _I_ = [0, caml_call2(Vdom[36], cst_href, cst), _H_],
     _J_ = [0, [0, caml_call2(Vdom[36], cst_role, cst_button), _I_]];
    return caml_call5(Vdom[51], 0, cst_a, 0, _J_, _B_);
   }
   function prikaz_avtomata(model){
    var
     avtomat = caml_call1(Definicije_ZagnaniAvtomat[2], model[1]),
     _g_ = caml_call1(Definicije_Avtomat[7], avtomat);
    function _h_(_A_){return prikaz_stanja(model, _A_);}
    var
     stanja = caml_call2(Stdlib_List[19], _h_, _g_),
     _i_ = caml_call1(Definicije_Avtomat[8], avtomat);
    function _j_(param){
     var
      dst = param[3],
      chr = param[2],
      src = param[1],
      svg_oznaka = caml_call2(Stdlib_String[1], 1, chr);
     if(caml_equal(src, dst))
      return prikaz_zanke
              (caml_call2(Dune_exe_Model[2], model, src), svg_oznaka);
     var _z_ = caml_call2(Dune_exe_Model[2], model, dst);
     return prikaz_prehoda
             (caml_call2(Dune_exe_Model[2], model, src), _z_, svg_oznaka);
    }
    var prehodi = caml_call2(Stdlib_List[19], _j_, _i_);
    if(typeof model[3] === "number")
     var a = 0;
    else
     var
      _p_ = 0,
      _q_ = function(param){return 1;},
      _r_ = [0, caml_call3(Vdom[10], 0, 0, _q_), _p_],
      _s_ =
        function(ev){
         var
          _t_ = ev[6],
          _u_ = caml_obj_tag(_t_),
          _v_ =
            250 === _u_
             ? _t_[1]
             : 246 === _u_ ? caml_call1(CamlinternalLazy[2], _t_) : _t_,
          _w_ = ev[5],
          _x_ = caml_obj_tag(_w_),
          _y_ =
            250 === _x_
             ? _w_[1]
             : 246 === _x_ ? caml_call1(CamlinternalLazy[2], _w_) : _w_;
         return [1, [254, _y_, _v_]];
        },
      a = [0, caml_call3(Vdom[21], 0, 0, _s_), _r_];
    var
     _k_ = caml_call2(Stdlib[37], prehodi, stanja),
     _l_ = [0, int_of_float_attr(cst_stroke_width$0, Parametri[4]), 0],
     _m_ = [0, int_of_float_attr(cst_height, model[5]), _l_],
     _n_ = [0, int_of_float_attr(cst_width, model[4]), _m_],
     _o_ = [0, caml_call2(Stdlib[37], a, _n_)];
    return caml_call4(Vdom[52], cst_svg, 0, _o_, _k_);
   }
   function view(model){
    var
     _c_ = [0, prikaz_avtomata(model), 0],
     _d_ = [0, prikaz_gumba_za_naslednji_znak(model), 0],
     _e_ = [0, prikaz_traku(model), _d_],
     _f_ = [0, caml_call5(Vdom[51], 0, cst_header, 0, 0, _e_), _c_];
    return caml_call5(Vdom[51], 0, cst_article, 0, 0, _f_);
   }
   var
    Dune_exe_View =
      [0,
       Parametri,
       int_of_float_attr,
       svg_krog,
       svg_daljica,
       svg_puscica,
       svg_oznaka,
       prikaz_stanja,
       prikaz_zanke,
       prikaz_prehoda,
       prikaz_traku,
       prikaz_gumba_za_naslednji_znak,
       prikaz_avtomata,
       view];
   runtime.caml_register_global(89, Dune_exe_View, "Dune__exe__View");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
